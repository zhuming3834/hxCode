{"version":3,"sources":["webpack:///src/components/page/goodsDetail.vue","webpack:///./src/components/page/goodsDetail.vue?cfc1","webpack:///./src/components/page/goodsDetail.vue","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js"],"names":["goodsDetail","name","data","cid","goodsDeatil","buyAddNum","carAddNum","lijiBuy","lijiCar","mounted","activated","this","$route","query","getDetail","methods","closeClick","addClick2","addClick1","jianClick1","jianClick2","self","$axios","get","params","then","res","ret_code","mySwiper","swiper_esm_bundle","loop","pagination","el","autoplay","delay","swiperData","ret_data","imgUrl1","imgUrl2","imgUrl3","imgUrl4","update","alert","ret_msg","catch","error","goShop","$router","push","goShopcar","addShopCar","id","nextBtnClick1","cId","buyNum","item","localStorage","setItem","stringify_default","nextBtnClick2","sureBuyClick","page_goodsDetail","render","_vm","_h","$createElement","_c","_self","staticClass","_l","key","attrs","src","_v","_s","cName","price","freight","surplus","domProps","innerHTML","details","on","click","$event","_e","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventIntercationOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","innerWidth","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","test","defaults","init","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","mutation","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","sqrt","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause"],"mappings":"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","file":"static/js/5.b4f92c300ccb722ea936.js","sourcesContent":["<template>\r\n  <div class=\"goodsDetail\">\r\n    <!-- 轮播图 -->\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n          <div class=\"swiper-slide\" v-for=\"item in goodsDeatil.swiperData\" :key=\"item\">\r\n            <img :src=\"item\" />\r\n          </div>\r\n      </div>\r\n      <!-- 如果需要分页器 -->\r\n      <div class=\"swiper-pagination\"></div>\r\n    </div>\r\n    <!-- 商品描述 -->\r\n    <div class=\"goodsDes\">{{goodsDeatil.cName}}</div>\r\n    <!-- 商品价格 -->\r\n    <div class=\"goodsPrice\">￥{{goodsDeatil.price}}</div>\r\n    <!-- 商品运费和剩余数量 -->\r\n    <div class=\"goodsNumFree\">\r\n      <div class=\"goodsPostFree\">运费:￥{{goodsDeatil.freight}}</div>\r\n      <div class=\"goodsNum\">剩余:{{goodsDeatil.surplus}}</div>\r\n    </div>\r\n    <div class=\"detail\">\r\n      <div class=\"title\">商品详情</div>\r\n      <!-- <img :src=\"goodsDeatil.detail\" /> -->\r\n      <div class=\"detailHtml\" v-html=\"goodsDeatil.details\"></div>\r\n    </div>\r\n    <!-- 底部按钮 -->\r\n    <div class=\"detailBottom\">\r\n      <div @click=\"goShop\" class=\"goShop\">店铺</div>\r\n      <div @click=\"goShopcar\" class=\"goShopcar\">购物车</div>\r\n      <div class=\"addShopcar\" @click=\"addShopCar(cid)\">加入购物车</div>\r\n      <div class=\"sureBuy\" @click=\"sureBuyClick(cid)\">确认购买</div>\r\n    </div>\r\n    <!-- 立即购买 -->\r\n    <div class=\"likeBuy\" v-if=\"lijiBuy == true\">\r\n      <div class=\"likeBuy_line1\">\r\n        <img :src=\"goodsDeatil.imgUrl1\" />\r\n        <div class=\"bdesc\">\r\n          <div class=\"bdes2\">{{goodsDeatil.cName}}</div>\r\n          <div class=\"bprice\">￥{{goodsDeatil.price}}</div>\r\n        </div>\r\n        <div @click=\"closeClick\" class=\"close\"></div>\r\n      </div>\r\n      <div class=\"likeBuy_line2\">\r\n        <div class=\"likeBuy_line2_left\">\r\n          <div>购买数量:</div>\r\n          <div>剩余{{goodsDeatil.surplus}}件</div>\r\n        </div>\r\n        <div class=\"likeBuy_line2_right\">\r\n          <div @click=\"addClick1\" class=\"add\">+</div>\r\n          <div class=\"add_num\">{{buyAddNum}}</div>\r\n          <div @click=\"jianClick1\"  class=\"jian\">-</div>\r\n        </div>\r\n      </div>\r\n      <div @click=\"nextBtnClick1(cid)\"  class=\"nextBtn\">下一步</div>\r\n    </div>\r\n    <!-- 加入购物车 -->\r\n    <div class=\"likeBuy\" v-if=\"lijiCar == true\">\r\n      <div class=\"likeBuy_line1\">\r\n        <img :src=\"goodsDeatil.imgUrl1\" />\r\n        <div class=\"bdesc\">\r\n          <div class=\"bdes2\">{{goodsDeatil.cName}}</div>\r\n          <div class=\"bprice\">￥{{goodsDeatil.price}}</div>\r\n        </div>\r\n        <div @click=\"closeClick\" class=\"close\"></div>\r\n      </div>\r\n      <div class=\"likeBuy_line2\">\r\n        <div class=\"likeBuy_line2_left\">\r\n          <div>购买数量:</div>\r\n          <div>剩余{{goodsDeatil.surplus}}件</div>\r\n        </div>\r\n        <div class=\"likeBuy_line2_right\">\r\n          <div @click=\"addClick2\" class=\"add\">+</div>\r\n          <div class=\"add_num\">{{carAddNum}}</div>\r\n          <div @click=\"jianClick2\" class=\"jian\">-</div>\r\n        </div>\r\n      </div>\r\n      <div @click=\"nextBtnClick2(cid)\" class=\"nextBtn2\">加入购物车</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swiper from 'swiper';\r\nimport 'swiper/dist/css/swiper.css'\r\nexport default {\r\n  name: 'goodsDetail',\r\n  data () {\r\n    return {\r\n      cid: '', // 上个页面传递过来的\r\n      goodsDeatil: {},\r\n      buyAddNum: 1,\r\n      carAddNum: 1,\r\n      lijiBuy: false,\r\n      lijiCar: false\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  activated(){\r\n    this.cid = this.$route.query.cid;\r\n    this.getDetail();\r\n  },\r\n  methods: {\r\n    closeClick(){\r\n      this.lijiBuy = false;\r\n      this.lijiCar = false;\r\n    },\r\n    addClick2(){\r\n      this.carAddNum = this.carAddNum + 1;\r\n    },\r\n    addClick1(){\r\n      this.buyAddNum = this.buyAddNum + 1;\r\n    },\r\n    jianClick1(){\r\n      this.buyAddNum = this.buyAddNum - 1;\r\n      if(this.buyAddNum <= 0){\r\n        this.buyAddNum = 1;\r\n      }\r\n    },\r\n    jianClick2(){\r\n      this.carAddNum = this.carAddNum - 1;\r\n      if(this.carAddNum <= 0){\r\n        this.carAddNum = 1;\r\n      }\r\n    },\r\n    getDetail(){\r\n      var self = this;\r\n      this.$axios.get('basic/commodity/findCommodityByCid.do',{\r\n        params: {\r\n          cid: self.cid\r\n        }\r\n      }).then(function (res){\r\n        if (res.data.ret_code == 0) {\r\n          var mySwiper =  new Swiper ('.swiper-container', {\r\n            loop: true,\r\n            // 如果需要分页器\r\n            // pagination: '.swiper-pagination',\r\n            pagination: {\r\n              el: '.swiper-pagination',\r\n            },\r\n            autoplay: {\r\n              delay: 2000,\r\n            }\r\n          })\r\n          var swiperData = [res.data.ret_data.imgUrl1,res.data.ret_data.imgUrl2,res.data.ret_data.imgUrl3,res.data.ret_data.imgUrl4];\r\n          self.goodsDeatil = res.data.ret_data;\r\n          self.goodsDeatil.swiperData = swiperData;\r\n          mySwiper.update();\r\n        } else {\r\n          alert(res.data.ret_msg);\r\n        }\r\n      }).catch(function (error) {\r\n        alert('网络连接失败');\r\n      });\r\n    },\r\n    goShop(){\r\n      this.$router.push('/home');\r\n    },\r\n    // 去购物车\r\n    goShopcar(){\r\n      this.$router.push('/shopcar');\r\n    },\r\n    // 添加进购物车\r\n    addShopCar: function(id){\r\n      this.lijiCar = true;\r\n    },\r\n    // 立即购买下一步\r\n    nextBtnClick1: function(id){\r\n      var self = this;\r\n      this.$axios.get('basic/commodity/lijigoumai.do',{\r\n        params: {\r\n          cId: id,\r\n          buyNum: self.buyAddNum\r\n        }\r\n      }).then(function (res){\r\n        if (res.data.ret_code == 0) {\r\n          self.lijiCar = false;\r\n          var item = [res.data.ret_data]\r\n          localStorage.setItem('selectGoods',JSON.stringify(item));\r\n          self.$router.push('/confirmOrder')\r\n        } else {\r\n          alert(res.data.ret_msg);\r\n        }\r\n      }).catch(function (error) {})\r\n    },\r\n    // 加入购物车下一步\r\n    nextBtnClick2: function(id){\r\n      var self = this;\r\n      this.$axios.get('basic/commodity/createCommodityListToyTrolley.do',{\r\n        params: {\r\n          cId: id,\r\n          buyNum: self.carAddNum\r\n        }\r\n      }).then(function (res){\r\n        if (res.data.ret_code == 0) {\r\n          self.lijiCar = false;\r\n          alert('添加成功!',5000);\r\n        } else {\r\n          alert(res.data.ret_msg);\r\n        }\r\n      }).catch(function (error) {})\r\n    },\r\n    // 立即购买\r\n    sureBuyClick: function(id){\r\n      this.lijiBuy = true;\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.bdesc {\r\n  position: absolute;\r\n  left: 180px;\r\n  top: 10px;\r\n  bottom: 10px;\r\n  height: 100px;\r\n  right: 100px;\r\n}\r\n.bdes2 {\r\n  font-size: 28px;\r\n  color: #333333;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n  height: 80px;\r\n}\r\n.bprice {\r\n  font-size: 36px;\r\n  color: #fe0100;\r\n}\r\n.nextBtn {\r\n  width: 100%;\r\n  height: 88px;\r\n  text-align: center;\r\n  line-height: 88px;\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: #ff6700;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n}\r\n.nextBtn2 {\r\n  width: 100%;\r\n  height: 88px;\r\n  text-align: center;\r\n  line-height: 88px;\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: #fe0100;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n}\r\n.likeBuy_line2 {\r\n  height: 140px;\r\n  width: 100%;\r\n}\r\n.likeBuy_line2_left {\r\n  float: left;\r\n  font-size: 30px;\r\n  color: #333333;\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n}\r\n.likeBuy_line2_right {\r\n  float: right;\r\n}\r\n.likeBuy_line2_right div{\r\n  float: left;\r\n  width: 70px;\r\n  height: 60px;\r\n  line-height: 60px;\r\n  text-align: center;\r\n  margin-top: 40px;\r\n}\r\n.likeBuy_line2_right .add {\r\n  background-color: #d9d9d9;\r\n  border-top-left-radius: 6px;\r\n  border-bottom-left-radius: 6px;\r\n}\r\n.likeBuy_line2_right .jian {\r\n  background-color: #d9d9d9;\r\n  border-top-right-radius: 6px;\r\n  border-bottom-right-radius: 6px;\r\n  margin-right: 20px;\r\n}\r\n.likeBuy {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 500px;\r\n  width: 750px;\r\n  background-color: white;\r\n  z-index: 9999;\r\n}\r\n.likeBuy_line1 {\r\n  height: 170px;\r\n  position: relative;\r\n  border-bottom: solid 1px #f2f2f2;\r\n}\r\n.likeBuy_line1 img{\r\n  width: 140px;\r\n  height: 150px;\r\n  margin-top: 10px;\r\n  margin-left: 20px;\r\n}\r\n.likeBuy_line1 .close{\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 10px;\r\n  color: #999999;\r\n  font-size: 40px;\r\n  height: 80px;\r\n  width: 80px;\r\n  text-align: right;\r\n  background-image: url(../../assets/images/close.png);\r\n  background-position: right center;\r\n  background-repeat: no-repeat;\r\n  background-size: 30px 30px;\r\n}\r\n.detailHtml img{\r\n  max-width: 750px;\r\n  width: 750px !important;\r\n  height: auto;\r\n  overflow: hidden;\r\n}\r\n.swiper-container, .swiper-wrapper, .swiper-slide, .swiper-slide img {\r\n  width: 100%;\r\n  height: 500px;\r\n}\r\n.swiper-pagination {\r\n  width: 730px;\r\n  text-align: right;\r\n}\r\n.goodsDes {\r\n  width: 710px;\r\n  padding: 30px 20px 10px;\r\n  color: #444444;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n}\r\n.goodsPrice {\r\n  color: orangered;\r\n  font-size: 36px;\r\n  width: 710px;\r\n  padding: 0 20px 10px;\r\n}\r\n.goodsNumFree {\r\n  width: 100%;\r\n  border-top: solid 1px #fafafa;\r\n  border-bottom: solid 1px #fafafa;\r\n  height: 70px;\r\n  line-height: 70px;\r\n  color: #999999;\r\n  font-size: 26px;\r\n}\r\n.goodsPostFree {\r\n  float: left;\r\n  margin-left: 20px;\r\n}\r\n.goodsNum {\r\n  float: right;\r\n  margin-right: 20px;\r\n}\r\n.detail{\r\n  margin-bottom: 120px;\r\n}\r\n.detail .title{\r\n  margin-left: 20px;\r\n  color: #333333;\r\n  height: 70px;\r\n  line-height: 70px;\r\n}\r\nimg {\r\n  width: 100%;\r\n}\r\n.detailBottom {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 120px;\r\n  border-top: solid 1px #fafafa;\r\n  z-index: 100;\r\n  background-color: white;\r\n}\r\n.goShop,.goShopcar {\r\n  height: 60px;\r\n  line-height: 60px;\r\n  padding: 0 10px 0 50px;\r\n  margin: 30px 0;\r\n  width: 132px;\r\n  text-align: center;\r\n  font-size: 28px;\r\n  background-position: 30px center;\r\n  background-repeat: no-repeat;\r\n  background-size: 40px 40px;\r\n  float: left;\r\n}\r\n.goShop{\r\n  border-right: solid 2px #fafafa;\r\n  background-image: url(../../assets/images/detail_shop2.png);\r\n  background-position: 40px center;\r\n}\r\n.goShopcar {\r\n  border-left: solid 2px #fafafa;\r\n  background-image: url(../../assets/images/detail_car2.png);\r\n}\r\n.addShopcar,.sureBuy {\r\n  height: 60px;\r\n  line-height: 60px;\r\n  padding: 30px 0;\r\n  width: 180px;\r\n  text-align: center;\r\n  font-size: 28px;\r\n  color: white;\r\n  float: right;\r\n}\r\n.addShopcar{\r\n  background-color: orangered;\r\n}\r\n.sureBuy {\r\n  background-color: red;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/page/goodsDetail.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"goodsDetail\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.goodsDeatil.swiperData),function(item){return _c('div',{key:item,staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":item}})])})),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination\"})]),_vm._v(\" \"),_c('div',{staticClass:\"goodsDes\"},[_vm._v(_vm._s(_vm.goodsDeatil.cName))]),_vm._v(\" \"),_c('div',{staticClass:\"goodsPrice\"},[_vm._v(\"￥\"+_vm._s(_vm.goodsDeatil.price))]),_vm._v(\" \"),_c('div',{staticClass:\"goodsNumFree\"},[_c('div',{staticClass:\"goodsPostFree\"},[_vm._v(\"运费:￥\"+_vm._s(_vm.goodsDeatil.freight))]),_vm._v(\" \"),_c('div',{staticClass:\"goodsNum\"},[_vm._v(\"剩余:\"+_vm._s(_vm.goodsDeatil.surplus))])]),_vm._v(\" \"),_c('div',{staticClass:\"detail\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"商品详情\")]),_vm._v(\" \"),_c('div',{staticClass:\"detailHtml\",domProps:{\"innerHTML\":_vm._s(_vm.goodsDeatil.details)}})]),_vm._v(\" \"),_c('div',{staticClass:\"detailBottom\"},[_c('div',{staticClass:\"goShop\",on:{\"click\":_vm.goShop}},[_vm._v(\"店铺\")]),_vm._v(\" \"),_c('div',{staticClass:\"goShopcar\",on:{\"click\":_vm.goShopcar}},[_vm._v(\"购物车\")]),_vm._v(\" \"),_c('div',{staticClass:\"addShopcar\",on:{\"click\":function($event){_vm.addShopCar(_vm.cid)}}},[_vm._v(\"加入购物车\")]),_vm._v(\" \"),_c('div',{staticClass:\"sureBuy\",on:{\"click\":function($event){_vm.sureBuyClick(_vm.cid)}}},[_vm._v(\"确认购买\")])]),_vm._v(\" \"),(_vm.lijiBuy == true)?_c('div',{staticClass:\"likeBuy\"},[_c('div',{staticClass:\"likeBuy_line1\"},[_c('img',{attrs:{\"src\":_vm.goodsDeatil.imgUrl1}}),_vm._v(\" \"),_c('div',{staticClass:\"bdesc\"},[_c('div',{staticClass:\"bdes2\"},[_vm._v(_vm._s(_vm.goodsDeatil.cName))]),_vm._v(\" \"),_c('div',{staticClass:\"bprice\"},[_vm._v(\"￥\"+_vm._s(_vm.goodsDeatil.price))])]),_vm._v(\" \"),_c('div',{staticClass:\"close\",on:{\"click\":_vm.closeClick}})]),_vm._v(\" \"),_c('div',{staticClass:\"likeBuy_line2\"},[_c('div',{staticClass:\"likeBuy_line2_left\"},[_c('div',[_vm._v(\"购买数量:\")]),_vm._v(\" \"),_c('div',[_vm._v(\"剩余\"+_vm._s(_vm.goodsDeatil.surplus)+\"件\")])]),_vm._v(\" \"),_c('div',{staticClass:\"likeBuy_line2_right\"},[_c('div',{staticClass:\"add\",on:{\"click\":_vm.addClick1}},[_vm._v(\"+\")]),_vm._v(\" \"),_c('div',{staticClass:\"add_num\"},[_vm._v(_vm._s(_vm.buyAddNum))]),_vm._v(\" \"),_c('div',{staticClass:\"jian\",on:{\"click\":_vm.jianClick1}},[_vm._v(\"-\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"nextBtn\",on:{\"click\":function($event){_vm.nextBtnClick1(_vm.cid)}}},[_vm._v(\"下一步\")])]):_vm._e(),_vm._v(\" \"),(_vm.lijiCar == true)?_c('div',{staticClass:\"likeBuy\"},[_c('div',{staticClass:\"likeBuy_line1\"},[_c('img',{attrs:{\"src\":_vm.goodsDeatil.imgUrl1}}),_vm._v(\" \"),_c('div',{staticClass:\"bdesc\"},[_c('div',{staticClass:\"bdes2\"},[_vm._v(_vm._s(_vm.goodsDeatil.cName))]),_vm._v(\" \"),_c('div',{staticClass:\"bprice\"},[_vm._v(\"￥\"+_vm._s(_vm.goodsDeatil.price))])]),_vm._v(\" \"),_c('div',{staticClass:\"close\",on:{\"click\":_vm.closeClick}})]),_vm._v(\" \"),_c('div',{staticClass:\"likeBuy_line2\"},[_c('div',{staticClass:\"likeBuy_line2_left\"},[_c('div',[_vm._v(\"购买数量:\")]),_vm._v(\" \"),_c('div',[_vm._v(\"剩余\"+_vm._s(_vm.goodsDeatil.surplus)+\"件\")])]),_vm._v(\" \"),_c('div',{staticClass:\"likeBuy_line2_right\"},[_c('div',{staticClass:\"add\",on:{\"click\":_vm.addClick2}},[_vm._v(\"+\")]),_vm._v(\" \"),_c('div',{staticClass:\"add_num\"},[_vm._v(_vm._s(_vm.carAddNum))]),_vm._v(\" \"),_c('div',{staticClass:\"jian\",on:{\"click\":_vm.jianClick2}},[_vm._v(\"-\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"nextBtn2\",on:{\"click\":function($event){_vm.nextBtnClick2(_vm.cid)}}},[_vm._v(\"加入购物车\")])]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3a06a012\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/page/goodsDetail.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3a06a012\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./goodsDetail.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./goodsDetail.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./goodsDetail.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3a06a012\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./goodsDetail.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3a06a012\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/page/goodsDetail.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 10, 2018\n */\nvar d;\nif (typeof document === 'undefined') {\n  d = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  };\n} else {\n  // eslint-disable-next-line\n  d = document;\n}\n\nvar doc = d;\n\nvar w;\nif (typeof window === 'undefined') {\n  w = {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  };\n} else {\n  // eslint-disable-next-line\n  w = window;\n}\n\nvar win = w;\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.0.6\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: May 27, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 4.3.3\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 5, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (swiper.isHorizontal()) {\n        slideSize = slide[0].getBoundingClientRect().width +\n          parseFloat(slideStyles.getPropertyValue('margin-left')) +\n          parseFloat(slideStyles.getPropertyValue('margin-right'));\n      } else {\n        slideSize = slide[0].getBoundingClientRect().height +\n          parseFloat(slideStyles.getPropertyValue('margin-top')) +\n          parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress =\n      (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible =\n                (slideBefore >= 0 && slideBefore < swiper.size) ||\n                (slideAfter > 0 && slideAfter <= swiper.size) ||\n                (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||\n        (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  } else if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi =\n      !device.webView &&\n      (ipod || iphone) &&\n      (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&\n      metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  if (\n    Device.ios &&\n    !Device.cordova &&\n    params.iOSEdgeSwipeDetection &&\n    ((startX <= params.iOSEdgeSwipeThreshold) ||\n    (startX >= window.screen.width - params.iOSEdgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data$$1.formElements) &&\n      document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    } else if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventIntercationOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  iOSEdgeSwipeDetection: false,\n  iOSEdgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object' &&\n          !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static get Class() {\n    return SwiperClass;\n  }\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      mutations.forEach((mutation) => {\n        swiper.emit('observerUpdate', mutation);\n      });\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth &&\n          point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported &&\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.nextEl === 'string' &&\n        $nextEl.length > 1 &&\n        swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.prevEl === 'string' &&\n        $prevEl.length > 1 &&\n        swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick &&\n        !$(e.target).is($prevEl) &&\n        !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n        `<span class=\"${params.currentClass}\"></span>` +\n        ' / ' +\n        `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el &&\n        swiper.params.pagination.hideOnClick &&\n        swiper.pagination.$el.length > 0 &&\n        !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } else if (\n        !swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ?\n        new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :\n        new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ?\n        Math.max(1 - Math.abs($slideEl[0].progress), 0) :\n        1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +\n          (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = "],"sourceRoot":""}